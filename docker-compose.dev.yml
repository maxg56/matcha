services:
  caddy:
    image: caddy:latest
    container_name: caddy-dev
    environment:
      VITE_HOSTNAME: ${VITE_HOSTNAME:-localhost}
    volumes:
      - ./services/proxy/Caddyfile:/etc/caddy/Caddyfile:ro
    ports:
      - "8000:80"
      - "8443:443"
    depends_on:
      - gateway
      - frontend
    networks:
      - frontend
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-matcha}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./services/database:/docker-entrypoint-initdb.d
    networks:
      - DB
    restart: unless-stopped

  adminer:
    image: adminer
    networks:
      - DB
      - backend
    restart: unless-stopped
    
  redis:
    image: redis:7-alpine
    networks:
      - DB
    restart: unless-stopped


  # Gateway for development
  gateway:
    build:
      context: ./api/gateway
      target: development
    environment:
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      GIN_MODE: debug
    volumes:
      - ./api/gateway/src:/app/src
      - ./api/gateway/go.mod:/app/go.mod
      - ./api/gateway/go.sum:/app/go.sum
      - ./api/gateway/.air.toml:/app/.air.toml
    depends_on:
      - auth-service
      - user-service
      - match-service
      - chat-service
      - notify-service
      - media-service
      - paiements-service
    networks:
      - DB
      - backend
    restart: unless-stopped

  auth-service:
    build:
      context: ./api/auth-service
      target: development
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: 6379
      GIN_MODE: debug
      JWT_SECRET: ${JWT_SECRET}
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-your-email@gmail.com}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-your-app-password}
      FROM_EMAIL: ${FROM_EMAIL}
      FROM_NAME: ${FROM_NAME}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      CLEANUP_INTERVAL_MINUTES: ${CLEANUP_INTERVAL_MINUTES:-30}
    volumes:
      - ./api/auth-service/src:/app/src
      - ./api/auth-service/templates:/app/templates
      - ./api/auth-service/go.mod:/app/go.mod
      - ./api/auth-service/go.sum:/app/go.sum
      - ./api/auth-service/.air.toml:/app/.air.toml
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  user-service:
    build:
      context: ./api/user-service
      target: development

    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      GIN_MODE: debug
    volumes:
      - ./api/user-service/src:/app/src
      - ./api/user-service/go.mod:/app/go.mod
      - ./api/user-service/go.sum:/app/go.sum
      - ./api/user-service/.air.toml:/app/.air.toml
    depends_on:
      - postgres
    networks:
      - DB
      - backend
    restart: unless-stopped

  match-service:
    build: 
      context: ./api/match-service
      target: development
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      PORT: 8003
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: 6379
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      REDIS_DB: ${REDIS_DB:-0}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      USE_REDIS_CACHE: ${USE_REDIS_CACHE:-true}
    volumes:
      - ./api/match-service/src:/app/src
      - ./api/match-service/go.mod:/app/go.mod
      - ./api/match-service/go.sum:/app/go.sum
      - ./api/match-service/.air.toml:/app/.air.toml
    depends_on:
      - postgres
    networks:
      - DB
      - backend
    restart: unless-stopped

  chat-service:
    build:
      context: ./api/chat-service
      target: development

    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ENABLE_DETAILED_LOGS: ${ENABLE_DETAILED_LOGS:-true}
      METRICS_ENABLED: ${METRICS_ENABLED:-true}
      RATE_LIMIT_MESSAGES: ${RATE_LIMIT_MESSAGES:-10}
      RATE_LIMIT_WINDOW_MINUTES: ${RATE_LIMIT_WINDOW_MINUTES:-1}
      FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}
      ALLOWED_ORIGINS : ${ALLOWED_ORIGINS}
      GIN_MODE: debug
    volumes:
      - ./api/chat-service/src:/app/src
      - ./api/chat-service/go.mod:/app/go.mod
      - ./api/chat-service/go.sum:/app/go.sum
      - ./api/chat-service/.air.toml:/app/.air.toml
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  notify-service:
    build:
      context: ./api/notify-service
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: 6379
      PORT: 8005
      FLASK_ENV: development
      FLASK_DEBUG: 1
    volumes:
      - ./api/notify-service/src:/app/src:ro
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  media-service:
    build: ./api/media-service
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha_dev}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      PORT: 8006
      FLASK_ENV: development
      FLASK_DEBUG: 1
    volumes:
      - media_uploads_dev:/app/uploads
      - ./api/media-service/src:/app/src:ro
    depends_on:
      - postgres
    networks:
      - DB
      - backend
    restart: unless-stopped

  paiements-service:
    build:
      context: ./api/paiements-service
      target: development
    env_file:
      - ./.env
    volumes:
      - ./api/paiements-service/src:/app/src
      - ./api/paiements-service/go.mod:/app/go.mod
      - ./api/paiements-service/go.sum:/app/go.sum
      - ./api/paiements-service/.air.toml:/app/.air.toml
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - DB
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      target: development
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8080}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:8004}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - gateway
    networks:
      - frontend
    restart: unless-stopped

  user-creation:
    build: ./api/user-creation
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-matcha}
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASSWORD:-password}
    networks:
      - DB
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data_dev:
    driver: local
    driver_opts:
      type: none
      device: ./volumes/data
      o: bind
  redis_data_dev:
    driver: local
    driver_opts:
      type: none
      device: ./volumes/redis
      o: bind
  media_uploads_dev:
    driver: local
    driver_opts:
      type: none
      device: ./volumes/media_uploads
      o: bind
  frontend_node_modules:

networks:
  frontend:
  backend:
  DB:

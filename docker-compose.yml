services:
  caddy:
    image: caddy:latest
    container_name: caddy
    environment:
      VITE_HOSTNAME: ${VITE_HOSTNAME:-localhost}
    volumes:
      - ./proxy/Caddyfile:/etc/caddy/Caddyfile:ro
    ports:
      - "8000:80"
      - "8443:443"
    depends_on:
      - gateway
      - frontend
    networks:
      - frontend
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-matcha}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d:ro
    networks:
      - DB
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    networks:
      - DB
    restart: unless-stopped

  gateway:
    build: ./api/gateway
    environment:
      PORT: 8080
      AUTH_SERVICE_URL: http://auth-service:8001
      USER_SERVICE_URL: http://user-service:8002
      MATCH_SERVICE_URL: http://match-service:8003
      CHAT_SERVICE_URL: http://chat-service:8004
      NOTIFY_SERVICE_URL: http://notify-service:8005
      MEDIA_SERVICE_URL: http://media-service:8006
    depends_on:
      - auth-service
      - user-service
      - match-service
      - chat-service
      - notify-service
      - media-service
    networks:
      - DB
      - backend
    restart: unless-stopped
    ports:
      - "8080:8080"

  auth-service:
    build: ./api/auth-service
    ports:
      - "8001:8001"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: matcha
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AUTO_MIGRATE: "true"
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-jwt-refresh-secret}
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  user-service:
    build: ./api/user-service
    ports:
      - "8002:8002"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: matcha
      DB_USER: postgres
      DB_PASSWORD: password
    depends_on:
      - postgres
    networks:
      - DB
      - backend
    restart: unless-stopped

  match-service:
    build: ./api/match-service
    ports:
      - "8003:8003"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: matcha
      DB_USER: postgres
      DB_PASSWORD: password
      PORT: 8003
    depends_on:
      - postgres
    networks:
      - DB
      - backend
    restart: unless-stopped

  chat-service:
    build: ./api/chat-service
    ports:
      - "8004:8004"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: matcha
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  notify-service:
    build: ./api/notify-service
    ports:
      - "8005:8005"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: matcha
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 8005
    depends_on:
      - postgres
      - redis
    networks:
      - DB
      - backend
    restart: unless-stopped

  media-service:
    build: ./api/media-service
    ports:
      - "8006:8006"
    environment:
      PORT: 8006
    volumes:
      - media_uploads:/app/uploads
    networks:
      - DB
      - backend
    restart: unless-stopped

  frontend:
    build: ./frontend
    command: ["pnpm", "dev", "--host", "0.0.0.0"]
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: https://localhost:8443/api
    depends_on:
      - gateway
    networks:
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  media_uploads:

networks:
  frontend:
  backend:
  DB:

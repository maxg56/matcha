name: Lint & Format Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-go:
    name: Lint Go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run Go format check
        run: |
          for dir in api/*/; do
            if [ -f "$dir/go.mod" ]; then
              echo "Checking $dir"
              cd "$dir"
              go fmt ./...
              go vet ./...
              cd ../..
            fi
          done

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: api/auth-service

      - name: Run golangci-lint for all Go services
        run: |
          for dir in api/*/; do
            if [ -f "$dir/go.mod" ]; then
              echo "Linting $dir"
              cd "$dir"
              golangci-lint run
              cd ../..
            fi
          done

  lint-ts:
    name: Lint TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Install dependencies
        run: pnpm install
        working-directory: frontend

      - name: Run ESLint check
        run: pnpm run lint
        working-directory: frontend

  lint-py:
    name: Lint Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install black flake8 isort
          # Install dependencies for each Python service
          for dir in api/*/; do
            if [ -f "$dir/requirements.txt" ]; then
              echo "Installing dependencies for $dir"
              pip install -r "$dir/requirements.txt"
            fi
          done

      - name: Run Python checks
        run: |
          for dir in api/*/; do
            if [ -f "$dir/requirements.txt" ] && [ -d "$dir/src" ]; then
              echo "Checking $dir"
              black --check "$dir/src"
              isort --check-only "$dir/src"
              flake8 "$dir/src"
            fi
          done
